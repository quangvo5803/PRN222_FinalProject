@model List<BusinessObject.Model.ShoppingCart>

<div class="container mt-5">
    <h2 class="mb-4">Your Shopping Cart</h2>
    @if (Model == null || !Model.Any())
    {
        <p>Your shopping cart is empty.</p>
        <a asp-action="Menu" asp-controller="Home" class="btn btn-primary">Continue shopping</a>
    }
    else
    {
        <div class="row">
            <!-- Danh sách sản phẩm -->
            <div class="col-md-8">
                @foreach (var item in Model)
                {
                    <div class="card mb-3 cart-item" data-id="@item.Id">
                        <div class="card-body d-flex align-items-center">
                            <!-- Ảnh sản phẩm -->
                            <div class="me-3">
                                @if (item.Product?.ProductAvatar != null)
                                {
                                    <img src="/img/products/@item.Product.ProductAvatar.ImagePath" alt="@item.Product.Name" style="width: 100px; height: 100px; object-fit: contain;" />
                                }
                                else
                                {
                                    <img src="https://upload.wikimedia.org/wikipedia/commons/1/14/No_Image_Available.jpg" alt="Placeholder" style="width: 100px; height: 100px; object-fit: contain;" />
                                }
                            </div>
                            <!-- Thông tin sản phẩm -->
                            <div class="flex-grow-1">
                                <h5>@item.Product?.Name</h5>
                                <div class="d-flex align-items-center">
                                    <!-- Số lượng -->
                                    <div class="input-group input-group-sm me-3" style="width: 120px;">
                                        <button class="btn btn-outline-secondary decrease-quantity" type="button">-</button>
                                        <input type="text" class="form-control text-center quantity" value="@item.Count" readonly />
                                        <button class="btn btn-outline-secondary increase-quantity" type="button">+</button>
                                    </div>
                                    <!-- Giá -->
                                    <div>
                                        <h5 class="text-primary mb-0 item-total">@(((item.Product != null ? item.Product.Price * item.Count : 0).ToString("C", new CultureInfo("vi-VN"))))</h5>
                                        <small class="text-muted">@(item.Product?.Price.ToString("C", new CultureInfo("vi-VN"))) / per item</small>
                                    </div>
                                </div>
                            </div>
                            <!-- Nút hành động -->
                            <div class="d-flex align-items-center">
                                <button class="btn btn-outline-danger btn-sm remove-item">Remove</button>
                            </div>
                        </div>
                    </div>
                }
                <!-- Thông tin giao hàng -->
                <div class="mt-3">
                    <p class="text-muted">
                        <i class="bi bi-truck me-2"></i> Free Delivery within fastest
                    </p>
                </div>
            </div>
            <!-- Tổng kết giá -->
            <div class="col-md-4">
                <div class="card">
                    <div class="card-body">
                        <!-- Tổng kết -->
                        <div class="d-flex justify-content-between mb-3">
                            <strong>Total Price:</strong>
                            <strong class="total-price">@(Model.Sum(item => item.Product.Price * item.Count).ToString("C", new CultureInfo("vi-VN")))</strong>
                        </div>
                        <!-- Nút thanh toán -->
                        <a asp-action="Checkout" asp-controller="Customer" class="btn btn-success w-100 mb-2">Make Purchase</a>
                        <a asp-action="Product" asp-controller="Customer" class="btn btn-outline-secondary w-100">Back to Shop</a>
                    </div>
                </div>
            </div>
        </div>
    }
</div>

@section Scripts {
    <script>
        // Tăng số lượng
        document.querySelectorAll('.increase-quantity').forEach(button => {
            button.addEventListener('click', async () => {
                const cartItem = button.closest('.cart-item');
                const cartId = cartItem.dataset.id;
                const quantityInput = cartItem.querySelector('.quantity');
                const itemTotal = cartItem.querySelector('.item-total');

                const response = await fetch(`/Customer/UpdateQuantity?cartId=${cartId}&change=1`, {
                    method: 'POST',
                    headers: { 'Content-Type': 'application/json' }
                });

                const result = await response.json();
                if (result.success) {
                    if (result.removed) {
                        cartItem.remove();
                    } else {
                        quantityInput.value = result.newCount;
                        itemTotal.textContent = `$${result.itemTotal}`;
                    }
                    updateCartSummary(result);
                } else {
                    alert(result.message);
                }
            });
        });

        // Giảm số lượng
        document.querySelectorAll('.decrease-quantity').forEach(button => {
            button.addEventListener('click', async () => {
                const cartItem = button.closest('.cart-item');
                const cartId = cartItem.dataset.id;
                const quantityInput = cartItem.querySelector('.quantity');
                const itemTotal = cartItem.querySelector('.item-total');

                const response = await fetch(`/Customer/UpdateQuantity?cartId=${cartId}&change=-1`, {
                    method: 'POST',
                    headers: { 'Content-Type': 'application/json' }
                });

                const result = await response.json();
                if (result.success) {
                    if (result.removed) {
                        cartItem.remove();
                    } else {
                        quantityInput.value = result.newCount;
                        itemTotal.textContent = `$${result.itemTotal}`;
                    }
                    updateCartSummary(result);
                } else {
                    alert(result.message);
                }
            });
        });

        // Xóa sản phẩm
        document.querySelectorAll('.remove-item').forEach(button => {
            button.addEventListener('click', async () => {
                const cartItem = button.closest('.cart-item');
                const cartId = cartItem.dataset.id;

                const response = await fetch(`/Customer/RemoveFromCart?cartId=${cartId}`, {
                    method: 'POST',
                    headers: { 'Content-Type': 'application/json' }
                });

                const result = await response.json();
                if (result.success) {
                    cartItem.remove();
                    updateCartSummary(result);
                } else {
                    alert(result.message);
                }
            });
        });

        // Cập nhật tổng giá
        function updateCartSummary(result) {
            document.querySelector('.total-price').textContent = `$${result.totalPrice}`;
            if (result.cartCount === 0) {
                location.reload(); // Tải lại trang nếu giỏ hàng trống
            }
        }
    </script>
}